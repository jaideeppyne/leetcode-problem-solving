Problem statement: https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3327/

You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.

Follow up: Your solution should run in O(log n) time and O(1) space.

Example 1:

Input: nums = [1,1,2,3,3,4,4,8,8]
Output: 2

Example 2:

Input: nums = [3,3,7,7,10,11,11]
Output: 10

 

Constraints:

    1 <= nums.length <= 10^5
    0 <= nums[i] <= 10^5

SOLUTION:

class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        
        nums.emplace_back(-1);
        for (int i = 0; i < nums.size(); i += 2) {
            if(nums[i] != nums[i + 1])
                return nums[i];
        }
        return -1;
    }
};
